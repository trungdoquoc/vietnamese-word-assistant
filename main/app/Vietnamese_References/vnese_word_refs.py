nguyen_am_don = ['a', 'ă', 'â', 'e', 'ê', 'i', 'u', 'ư', 'o', 'ơ', 'ô', 'y']
phu_am_db = ['gi', 'qu']

thanh_dict = {
    'sac': ['á', 'ắ', 'ấ', 'é', 'ế', 'í', 'ú', 'ứ', 'ó', 'ớ', 'ố', 'ý'],
    'hoi': ['ả', 'ẳ', 'ẩ', 'ẻ', 'ể', 'ỉ', 'ủ', 'ử', 'ỏ', 'ở', 'ổ', 'ỷ'],
    'nga': ['ã', 'ẵ', 'ẫ', 'ẽ', 'ễ', 'ĩ', 'ũ', 'ữ', 'õ', 'ỡ', 'ỗ', 'ỹ'],
    'nang': ['ạ', 'ặ', 'ậ', 'ẹ', 'ệ', 'ị', 'ụ', 'ự', 'ọ', 'ợ', 'ộ', 'ỵ'],
    'huyen': ['à', 'ằ', 'ầ', 'è', 'ề', 'ì', 'ù', 'ừ', 'ò', 'ờ', 'ồ', 'ỳ'],
    'ngang': ['a', 'ă', 'â', 'e', 'ê', 'i', 'u', 'ư', 'o', 'ơ', 'ô', 'y']
}

bang_trac_dict = {
    'T': ['sac', 'hoi', 'nga', 'nang'],
    'B': ['huyen', 'ngang']
}

thanh_nguyen_am = {
    'a': ['á', 'ả', 'ã', 'ạ', 'à', 'a'],
    'ă': ['ắ', 'ẳ', 'ẵ', 'ặ', 'ằ', 'ă'],
    'â': ['ấ', 'ẩ', 'ẫ', 'ậ', 'ầ', 'â'],
    'e': ['é', 'ẻ', 'ẽ', 'ẹ', 'è', 'e'],
    'ê': ['ế', 'ể', 'ễ', 'ệ', 'ề', 'ê'],
    'i': ['í', 'ỉ', 'ĩ', 'ị', 'ì', 'i'],
    'u': ['ú', 'ủ', 'ũ', 'ụ', 'ù', 'u'],
    'ư': ['ứ', 'ử', 'ữ', 'ự', 'ừ', 'ư'],
    'o': ['ó', 'ỏ', 'õ', 'ọ', 'ò', 'o'],
    'ơ': ['ớ', 'ở', 'õ', 'ợ', 'ờ', 'ơ'],
    'ô': ['ố', 'ổ', 'ỗ', 'ộ', 'ồ', 'ô'],
    'y': ['ý', 'ỷ', 'ỹ', 'ỵ', 'ỳ', 'y']
}

###

t1_vertical = ['a', 'ă', 'â', 'e', 'ê', 'i', 'o', 'ô', 'ơ', 'u', 'ư']
t1_horizontal = ['a', 'c', 'ch', 'e/ê', 'i', 'm', 'n', 'ng', 'nh', 'o/ơ', 'p', 't', 'u', 'y']
t1_matrix = [[0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
             [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0],
             [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1],
             [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],
             [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0],
             [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0],
             [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0],
             [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0],
             [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0],
             [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1],
             [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0]]

t2_vertical = ['iê', 'oa', 'oă', 'uâ', 'uô', 'uya', 'uyê', 'ươ', 'yê']
t2_horizontal = ['a', 'c', 'ch', 'i', 'm', 'n', 'ng', 'nh', 'p', 't', 'u', 'y']
t2_matrix = [[0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0],
             [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1],
             [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0],
             [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
             [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0],
             [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0],
             [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
             [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0],
             [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0]]

t1_complete = []
for r in range(len(t1_matrix)):
    row = []
    for c in range(len(t1_matrix[r])):
        if t1_matrix[r][c] == 1:
            row.append(t1_vertical[r] + t1_horizontal[c])
        else:
            row.append('')
    t1_complete.append(row)

### Fix some special cases:
t1_complete[6][3] = 'oe'
t1_complete[9][3] = 'uê'
t1_complete[0][9] = 'ao'
t1_complete[3][9] = 'eo'
t1_complete[9][9] = 'uơ'

t2_complete = []
for r in range(len(t2_matrix)):
    row = []
    for c in range(len(t2_matrix[r])):
        if t2_matrix[r][c] == 1:
            row.append(t2_vertical[r] + t2_horizontal[c])
        else:
            row.append('')
    t2_complete.append(row)

t2_complete[5][0] = 'uya'
t2_complete[5][2] = 'uych'
t2_complete[5][7] = 'uynh'
t2_complete[5][9] = 'uyt'

nguyen_am_da = []

for r in t1_complete:
    for e in r:
        if e != '':
            nguyen_am_da.append(e)

for r in t2_complete:
    for e in r:
        if e != '':
            nguyen_am_da.append(e)
